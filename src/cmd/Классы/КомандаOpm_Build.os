///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Процедура ОписаниеКоманды(Знач КомандаПриложения) Экспорт
	
	КомандаПриложения.Опция("m mf manifest-file", "", "Файл манифеста сборки (packagedef)");
	КомандаПриложения.Опция("o out out-dir", "", "Выходной каталог");
	КомандаПриложения.Опция("S self-include-deps", Ложь, "сборка пакета вмести с зависимостями");

	КомандаПриложения.Аргумент("SRC", ТекущийКаталог(), "Каталог исходников")
					.Обязательный(Ложь);

КонецПроцедуры

// Выполняет логику команды
Процедура ВыполнитьКоманду(Знач КомандаПриложения) Экспорт

	ФайлМанифеста = КомандаПриложения.ЗначениеОпции("mf");
	ВыходнойКаталог = КомандаПриложения.ЗначениеОпции("out");
	КаталогИсходников = КомандаПриложения.ЗначениеАргумента("SRC");
	
	СборкаВместеСЗависимостями = КомандаПриложения.ЗначениеОпции("self-include-deps");

	Если ПустаяСтрока(ФайлМанифеста) Тогда
		ФайлМанифеста = Неопределено;
	КонецЕсли;

	Если ПустаяСтрока(ВыходнойКаталог) Тогда
		ВыходнойКаталог = Неопределено;
	КонецЕсли;

	Сборщик = Новый СборщикПакета();
	Сборщик.СобиратьВместеСЗависимостями(СборкаВместеСЗависимостями);
	Сборщик.СобратьПакет(КаталогИсходников, ФайлМанифеста, ВыходнойКаталог);

КонецПроцедуры