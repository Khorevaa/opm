///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт
	
	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, "Собрать пакет из исходников");
	Парсер.ДобавитьПозиционныйПараметрКоманды(ОписаниеКоманды, "КаталогИсходников", "Каталог исходников");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-mf", "Файл манифеста сборки (packagedef)");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-out", "Выходной каталог");
	Парсер.ДобавитьКоманду(ОписаниеКоманды);

КонецПроцедуры

// Выполняет логику команды
// 
// Параметры:
//   ПараметрыКоманды - Соответствие ключей командной строки и их значений
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды) Экспорт

    ВыполнитьСборку(ПараметрыКоманды["КаталогИсходников"], ПараметрыКоманды["-mf"], ПараметрыКоманды["-out"]);
	Возврат 0;
	
КонецФункции

Процедура ВыполнитьСборку(Знач КаталогИсходников, Знач ФайлМанифеста, Знач ВыходнойКаталог) Экспорт
	
	Сборщик = Новый СборщикПакета();
	Сборщик.СобратьПакет(КаталогИсходников, ФайлМанифеста, ВыходнойКаталог);
	
КонецПроцедуры